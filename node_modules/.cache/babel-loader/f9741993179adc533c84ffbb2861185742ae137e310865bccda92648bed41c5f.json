{"ast":null,"code":"var _jsxFileName = \"/home/nguillon95/code/OwnProject/react-project/pokedex-react/src/components/pokemon-card.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './pokemon-card.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PokemonCard = ({\n  pokemon,\n  borderColor = \"#009688\"\n}) => {\n  _s();\n  const [color, setColor] = useState();\n  function showBorder() {\n    setColor(borderColor);\n  }\n  function hideColor() {\n    setColor(\"#f5f5f5\"); // remettre la bordure en gris\n  }\n  const formatDate = date => {\n    return `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;\n  };\n  const formatType = type => {\n    let color;\n    switch (type) {\n      case 'Feu':\n        color = 'red lighten-1';\n        break;\n      case 'Eau':\n        color = 'blue lighten-1';\n        break;\n      case 'Plante':\n        color = 'green lighten-1';\n        break;\n      case 'Insecte':\n        color = 'brown lighten-1';\n        break;\n      case 'Normal':\n        color = 'grey lighten-3';\n        break;\n      case 'Vol':\n        color = 'blue lighten-3';\n        break;\n      case 'Poison':\n        color = 'deep-purple accent-1';\n        break;\n      case 'Fée':\n        color = 'pink lighten-4';\n        break;\n      case 'Psy':\n        color = 'deep-purple darken-2';\n        break;\n      case 'Electrik':\n        color = 'lime accent-1';\n        break;\n      case 'Combat':\n        color = 'deep-orange';\n        break;\n      default:\n        color = 'grey';\n        break;\n    }\n    return `chip ${color}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col s6 m4\",\n    onMouseEnter: showBorder,\n    onMouseLeave: hideColor,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card horizontal\",\n      style: {\n        borderColor: color\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-image\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: pokemon.picture,\n          alt: pokemon.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-stacked\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: pokemon.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"small\", {\n              children: formatDate(pokemon.created)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 16\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), pokemon.types.map(type => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: formatType(type),\n            children: type\n          }, type, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(PokemonCard, \"82MkoYdCpCBLe6G9QQs4gyc+awE=\");\n_c = PokemonCard;\nexport default PokemonCard;\nvar _c;\n$RefreshReg$(_c, \"PokemonCard\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PokemonCard","pokemon","borderColor","_s","color","setColor","showBorder","hideColor","formatDate","date","getDate","getMonth","getFullYear","formatType","type","className","onMouseEnter","onMouseLeave","children","style","src","picture","alt","name","fileName","_jsxFileName","lineNumber","columnNumber","created","types","map","_c","$RefreshReg$"],"sources":["/home/nguillon95/code/OwnProject/react-project/pokedex-react/src/components/pokemon-card.tsx"],"sourcesContent":["import React, { FunctionComponent, useState } from 'react';\nimport Pokemon from '../models/pokemon';\nimport './pokemon-card.css';\n\ntype Props = {\n  pokemon: Pokemon,\n  borderColor?: string\n};\n\nconst PokemonCard: FunctionComponent<Props> = ({pokemon, borderColor=\"#009688\"}) => {\n\n  const [color, setColor] = useState<string>();\n\n  function showBorder() {\n    setColor(borderColor);\n  }\n\n  function hideColor() {\n    setColor(\"#f5f5f5\"); // remettre la bordure en gris\n  }\n\n  const formatDate = (date: Date): string => {\n    return `${date.getDate()}/${date.getMonth()+1}/${date.getFullYear()}`;\n  }\n\n  const formatType = (type: string): string => {\n    let color: string;\n\n    switch (type) {\n      case 'Feu':\n        color = 'red lighten-1';\n        break;\n      case 'Eau':\n        color = 'blue lighten-1';\n        break;\n      case 'Plante':\n        color = 'green lighten-1';\n        break;\n      case 'Insecte':\n        color = 'brown lighten-1';\n        break;\n      case 'Normal':\n        color = 'grey lighten-3';\n        break;\n      case 'Vol':\n        color = 'blue lighten-3';\n        break;\n      case 'Poison':\n        color = 'deep-purple accent-1';\n        break;\n      case 'Fée':\n        color = 'pink lighten-4';\n        break;\n      case 'Psy':\n        color = 'deep-purple darken-2';\n        break;\n      case 'Electrik':\n        color = 'lime accent-1';\n        break;\n      case 'Combat':\n        color = 'deep-orange';\n        break;\n      default:\n        color = 'grey';\n        break;\n    }\n\n    return `chip ${color}`;\n  }\n\n\n  return (\n    <div className=\"col s6 m4\" onMouseEnter={showBorder} onMouseLeave={hideColor}>\n      <div className=\"card horizontal\" style={{borderColor: color}}>\n        <div className=\"card-image\">\n          <img src={pokemon.picture} alt={pokemon.name}/>\n        </div>\n        <div className=\"card-stacked\">\n          <div className=\"card-content\">\n            <p>{pokemon.name}</p>\n            <p><small>{formatDate(pokemon.created)}</small></p>\n\n            {pokemon.types.map(type =>\n            <span key={type} className={formatType(type)}>{type}</span>\n            )}\n\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default PokemonCard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}